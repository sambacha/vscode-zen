{
  // Controls the window title based on the active editor.
  "window.title": "${dirty}${activeEditorShort}${separator}${rootName}${separator}${profileName}${separator}${appName}",
  "telemetry.enableTelemetry": false,
  "telemetry.telemetryLevel": "off",
  "telemetry.enableCrashReporter": false,
  "solidity.telemetry": false,
  "terminal.enableAppInsights": false,
  "workbench.editor.historyBasedLanguageDetection": true,
  "terminal.integrated.shellIntegration.enabled": true,
  "extensions.autoUpdate": "onlyEnabledExtensions",
  // @dev strip most environment variables from the terminal's environment, except for some important ones
  // {@link https://code.visualstudio.com/docs/terminal/profiles#_why-are-there-duplicate-paths-in-the-terminals-path-environment-variable-andor-why-are-they-reversed-on-macos}
  "terminal.integrated.inheritEnv": false,
  // @dev Map file extensions to an existing language either globally or per workspace.
  // {@see https://code.visualstudio.com/docs/languages/overview#_can-i-map-additional-file-extensions-to-a-language}
  "files.associations": {
    ".gas-snapshot": "julia",
    "*.sol": "solidity",
    "*.t.sol": "solidity",
    "*.slib": "solidity",
  },
  "editor.fontFamily": "PragmataPro",
  "files.eol": "\n",
  "betterAlign.surroundSpace": {
    colon: [0, 1],
    assignment: [-1, -1],
    arrow: [1, 1],
    comment: 2,
  },
  // Controls sorting order of editor history in quick open when filtering.
  //  - default: History entries are sorted by relevance based on the filter value used. More relevant entries appear first.
  //  - recency: History entries are sorted by recency. More recently opened entries appear first.
  "search.quickOpen.history.filterSortOrder": "default",
  // Configure effect of double-clicking a result in a search editor.
  //  - selectWord: Double-clicking selects the word under the cursor.
  //  - goToLocation: Double-clicking opens the result in the active editor group.
  //  - openLocationToSide: Double-clicking opens the result in the editor group to the side, creating one if it does not yet exist.
  "search.searchEditor.doubleClickBehaviour": "goToLocation",
  // @function sortOrder
  //  @note Controls sorting order of search results.
  //  @param default: Results are sorted by folder and file names, in alphabetical order.
  //  @param fileNames: Results are sorted by file names ignoring folder order, in alphabetical order.
  //  @param type: Results are sorted by file extensions, in alphabetical order.
  //  @param modified: Results are sorted by file last modified date, in descending order.
  //  @param countDescending: Results are sorted by count per file, in descending order.
  //  @param countAscending: Results are sorted by count per file, in ascending order.
  "search.sortOrder": "modified",
  "editor.cursorStyle": "block",
  "editor.insertSpaces": true,
  "editor.detectIndentation": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.patterns": {
    "*.ts": "${capture}.js, ${capture}.typegen.ts, ${capture}.typegen.ts",
    "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
    "*.jsx": "${capture}.js",
    "*.tsx": "${capture}.ts, ${capture}.typegen.ts, ${capture}.typegen.ts",
    "tsconfig.json": "tsconfig.*.json",
    "package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml",
    "*.mts": "${capture}.typegen.ts, ${capture}.typegen.ts",
    "*.cts": "${capture}.typegen.ts, ${capture}.typegen.ts",
  },
  // Controls whether the editor shows CodeLens.
  "editor.codeLens": true,
  // Controls whether the editor shows CodeLens.
  "diffEditor.codeLens": true,

  //  - legacy: Uses the legacy diffing algorithm.
  //  - advanced: Uses the advanced diffing algorithm.
  "diffEditor.diffAlgorithm": "advanced",
  // Controls the font family for CodeLens.
  "editor.codeLensFontFamily": "",
  // When enabled, the diff editor ignores changes in leading or trailing whitespace.
  "diffEditor.ignoreTrimWhitespace": true,

  // Timeout in milliseconds after which diff computation is cancelled. Use 0 for no timeout.
  "diffEditor.maxComputationTime": 8000,

  // Controls whether the diff editor shows +/- indicators for added/removed changes.
  "diffEditor.renderIndicators": true,
  // Controls the font size in pixels for CodeLens. When set to 0, 90% of `editor.fontSize` is used.
  "editor.codeLensFontSize": 0,
  "editor.codeLensFontFamily": "Hack",
  "editor.inlayHints.fontFamily": "'SF Mono Regular', monospace;",
  "editor.suggestSelection": "first",
  // Controls whether to preview the suggestion outcome in the editor.
  "editor.suggest.preview": false,

  // @class IntelliSense
  //   @note Controls whether a suggestion is selected when the widget shows.
  //  @param always: Always select a suggestion when automatically triggering IntelliSense.
  //  @param never: Never select a suggestion when automatically triggering IntelliSense.
  //  @param whenTriggerCharacter: Select a suggestion only when triggering IntelliSense from a trigger character.
  //  @param whenQuickSuggestion: Select a suggestion only when triggering IntelliSense as you type.
  "editor.suggest.selectionMode": "always",
  // Controls whether remembered suggestion selections are shared between multiple workspaces and windows (needs `editor.suggestSelection`).
  "editor.suggest.shareSuggestSelections": false,
  // When enabled IntelliSense shows `class`-suggestions.
  "editor.suggest.showClasses": true,
  // When enabled IntelliSense shows `color`-suggestions.
  "editor.suggest.showColors": true,
  // When enabled IntelliSense shows `constant`-suggestions.
  "editor.suggest.showConstants": true,
  // When enabled IntelliSense shows `constructor`-suggestions.
  "editor.suggest.showConstructors": true,
  // When enabled IntelliSense shows `customcolor`-suggestions.
  "editor.suggest.showCustomcolors": true,
  // When enabled IntelliSense shows `deprecated`-suggestions.
  "editor.suggest.showDeprecated": true,
  // When enabled IntelliSense shows `enumMember`-suggestions.
  "editor.suggest.showEnumMembers": true,
  // When enabled IntelliSense shows `enum`-suggestions.
  "editor.suggest.showEnums": true,
  // When enabled IntelliSense shows `event`-suggestions.
  "editor.suggest.showEvents": true,
  // When enabled IntelliSense shows `field`-suggestions.
  "editor.suggest.showFields": true,
  // When enabled IntelliSense shows `file`-suggestions.
  "editor.suggest.showFiles": true,
  "editor.letterSpacing": 0.55,
  "editor.lineHeight": 18,
  "window.menuBarVisibility": "compact",
  "editor.fontSize": 14,
  "editor.definitionLinkOpensInPeek": true,
  "workbench.editor.untitled.hint": "hidden",
  "editor.formatOnSave": false,
  "editor.wordWrap": "off",
  "diffEditor.wordWrap": "off",
  "editor.inlayHints.enabled": "on",
  "editor.inlineSuggest.enabled": true,
  "editor.quickSuggestions": {
    other: "on",
    comments: "on",
    strings: "on",
  },
  // GitHub
  "remoteHub.autoFetch.interval": 1500,
  "remoteHub.experimental.useNewCommitApi": false,
  // @note Enable or disable Copilot for specified [languages](https://code.visualstudio.com/docs/languages/identifiers)
  "github.copilot.enable": {
    "*": true,
    "*.js*": true,
    "*.ts": true,
    "*.mjs*": true,
    "*.cjs": true,
    "*.jsx": true,
    "*.tsx": true,
    "*.sol": true,
    "*.nix": true,
    "*.sh": true,
    "*.go": true,
    "*.env": false,
    "*.key": false,
    "?*env": false,
    "env_*": false,
    "?*key": false,
    "?*ssh": false,
    "id_*": false,
    yaml: true,
    plaintext: false,
    markdown: true,
  },
  "tailwindCSS.includeLanguages": {
    plaintext: "html",
  },
  "files.associations": {
    "*.css": "tailwindcss",
    ".dapprc": "shellscript",
    ".gas-snapshot": "julia",
    "*.hbs": "handlebars",
  },
  // Show inline suggestions
  "github.copilot.inlineSuggest.enable": true,
  "github.copilot.advanced": {
    indentationMode: {
      python: false,
      javascript: false,
      javascriptreact: false,
      jsx: false,
      typescript: false,
      typescriptreact: false,
      go: false,
      ruby: false,
      "*": true,
    },
    inlineSuggestCount: 3,
    "debug.githubCTSIntegrationEnabled": true,
    "debug.showScores": true,
    //    "top_p": 1
  },
  "terminal.external.osxExec": "iTerm.app",
  "terminal.explorerKind": "external",
  "javascript.format.enable": false,
  "javascript.format.insertSpaceAfterCommaDelimiter": false,
  // Workbench.
  "workbench.activityBar.visible": true,
  "workbench.colorCustomizations": {
    "editorBracketHighlight.foreground1": "#ea4aaa",
    "editorBracketHighlight.foreground2": "#28a745",
    "editorBracketHighlight.foreground3": "#6f42c1",
    "editorBracketHighlight.foreground4": "#ea4aaa",
    "editorBracketHighlight.foreground5": "#28a745",
    "editorBracketHighlight.foreground6": "#6f42c1",
    "[GitHub Light Default]": {
      "editorBracketHighlight.foreground1": "#ea4aaa",
      "editorBracketHighlight.foreground2": "#28a745",
      "editorBracketHighlight.foreground3": "#6f42c1",
      "editorBracketHighlight.foreground4": "#ea4aaa",
      "editorBracketHighlight.foreground5": "#28a745",
      "editorBracketHighlight.foreground6": "#6f42c1",
    },
    "[Nord]": {
      "editorBracketHighlight.foreground1": "#EBCB8B",
      "editorBracketHighlight.foreground2": "#D08770",
      "editorBracketHighlight.foreground3": "#B48EAD",
      "editorBracketHighlight.foreground4": "#EBCB8B",
      "editorBracketHighlight.foreground5": "#D08770",
      "editorBracketHighlight.foreground6": "#B48EAD",
    },
    "editor.lineHighlightBackground": "#1073cf2d",
    "editor.lineHighlightBorder": "#9fced11f",
  },
  "workbench.editor.closeOnFileDelete": true,
  "workbench.editor.decorations.badges": true,
  "workbench.editor.enablePreview": false,
  "workbench.editor.enablePreviewFromQuickOpen": false,
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editor.labelFormat": "medium",
  "workbench.editor.limit.value": 30,
  "workbench.editor.sharedViewState": true,
  "workbench.editor.untitled.experimentalLanguageDetection": true,
  "workbench.list.multiSelectModifier": "alt",
  "workbench.list.openMode": "doubleClick",
  "workbench.statusBar.visible": true,
  "workbench.tree.indent": 16,
  "gitlens.defaultDateLocale": "system",
  "bashIde.highlightParsingErrors": true,
  // colorizer2 has better coverage than the inbuilt version
  "bracket-pair-colorizer-2.depreciation-notice": false,
  "workbench.startupEditor": "none",
  "grammarly.config.documentDomain": "academic",
  "grammarly.config.suggestions.ConjunctionAtStartOfSentence": true,
  "grammarly.config.suggestions.InformalPronounsAcademic": true,
  "grammarly.files.include": [
    "**/readme.md",
    "**/README.md",
    "**/*.txt",
    "**.md",
    "**/*.adoc",
    "**/*.tex",
  ],
  "grammarly.selectors": [],
  "json.maxItemsComputed": 10000,
  "explorer.confirmDelete": false,
  "debug.showInStatusBar": "always",
  "redhat.telemetry.enabled": false,
  "hardhat-language-server.trace.server.verbosity": "verbose",
  "spellright.configurationScope": "user",
  "spellright.addToSystemDictionary": true,
  "spellright.notificationClass": "warning",
  "spellright.statusBarIndicator": true,
  "spellright.ignoreFiles": [
    "**/.gitignore",
    "**/.spellignore",
    "**/dist",
    "**/build",
    "**/.*",
  ],
  "spellright.latexSpellParameters": [
    "author",
    "title",
    "date",
    "chapter",
    "section\\*?",
    "subsection\\*?",
    "subsubsection\\*?",
    "part",
    "paragraph",
    "subparagraph",
    "text(rm|sf|tt|md|bf|up|it|sl|sc|normal)",
    "underline",
    "emph",
    "item",
    "footnote(text)?",
    "caption(of)?",
    "multicolumn",
    "href",
    "hyperref",
    "begin\\{frame\\}",
  ],
  // Configure settings to be overridden for the search-result language.
  "[search-result]": {
    "editor.lineNumbers": "off",
  },
  // Configure settings to be overridden for the shellscript language.
  "[shellscript]": {
    "files.eol": "\n",
  },
  // Configure settings to be overridden for the yaml language.
  "[yaml]": {
    "editor.insertSpaces": true,
    "editor.tabSize": 2,
    "editor.autoIndent": "advanced",
    "diffEditor.ignoreTrimWhitespace": false,
  },
  // Typescript
  "typescript.suggest.completeFunctionCalls": true,
  "typescript.tsserver.experimental.enableProjectDiagnostics": false,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "[typescript]": {
    "outline.showArrays": true,
    "outline.showFunctions": true,
    "breadcrumbs.showTypeParameters": true,
    "editor.gotoLocation.alternativeTypeDefinitionCommand": "editor.action.peekTypeDefinition",
    "outline.showInterfaces": true,
  },
  "typescript.suggest.paths": true,
  // Enable/disable suggestion diagnostics for TypeScript files in the editor.
  "typescript.suggestionActions.enabled": true,
  "explorer.confirmDragAndDrop": false,
  "editor.renderWhitespace": "boundary",
  "editor.bracketPairs": "active",
  "editor.bracketPairColorization.enabled": true,
  "editor.bracketPairColorization.independentColorPoolPerBracketType": true,
  "bracket-pair-colorizer-2.forceUniqueOpeningColor": true,
  "bracket-pair-colorizer-2.highlightActiveScope": true,
  "bracket-pair-colorizer-2.showBracketsInGutter": true,
  "bracket-pair-colorizer-2.showBracketsInRuler": true,
  "bracket-pair-colorizer-2.forceIterationColorCycle": true,
  "editor.foldingMaximumRegions": 15000,
  "solidity-va.test.defaultUnittestTemplate": "hardhat",
  "solidity-va.preview.markdown": true,
  "solidity-va.cockpit.view.topLevelContracts.listStyle": "tree",
  "beautify.ignore": "",
  "emmet.triggerExpansionOnTab": true,
  "emmet.showSuggestionsAsSnippets": true,
  // Controls whether snippets are shown with other suggestions and how they are sorted.
  //  - top: Show snippet suggestions on top of other suggestions.
  //  - bottom: Show snippet suggestions below other suggestions.
  //  - inline: Show snippets suggestions with other suggestions.
  //  - none: Do not show snippet suggestions.
  "editor.snippetSuggestions": "inline",
  "[markdown]": {
    "editor.defaultFormatter": "vscode.markdown-language-features",
  },
  "bracket-pair-colorizer-2.activeScopeCSS": [
    "borderStyle : solid",
    "borderWidth : 1px",
    "borderColor : {color}",
    "opacity: 0.5",
  ],
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.cursorBlinking": "expand",
  "editor.overviewRulerBorder": false,
  "editor.showFoldingControls": "mouseover",
  // "editor.renderIndentGuides": false,
  // Controls how the editor should render the current line highlight.
  "editor.renderLineHighlight": "all",
  //  "editor.fontFamily": "Input Mono, SFMono-UltraLight, SourceCodePro-Light, Menlo, Monaco, 'Courier New', monospace",
  "editor.fontWeight": "200",
  "window.titleBarStyle": "custom",
  "editor.quickSuggestionsDelay": 0,
  "prettier.useEditorConfig": true,
  "prettier.requireConfig": true,
  // List of characters the extension should track
  "gremlins.characters": {
    "2013": {
      description: "en dash",
      level: "warning",
    },
    "2018": {
      description: "left single quotation mark",
      level: "warning",
    },
    "2019": {
      description: "right single quotation mark",
      level: "warning",
    },
    "2029": {
      zeroWidth: true,
      description: "paragraph separator",
      level: "error",
    },
    "0003": {
      description: "end of text",
      level: "warning",
    },
    "000b": {
      description: "line tabulation",
      level: "warning",
    },
    "00a0": {
      description: "non breaking space",
      level: "info",
    },
    "00ad": {
      description: "soft hyphen",
      level: "info",
    },
    "200b": {
      zeroWidth: true,
      description: "zero width space",
      level: "error",
    },
    "200c": {
      zeroWidth: true,
      description: "zero width non-joiner",
      level: "warning",
    },
    "200e": {
      zeroWidth: true,
      description: "left-to-right mark",
      level: "error",
    },
    "201c": {
      description: "left double quotation mark",
      level: "warning",
    },
    "201d": {
      description: "right double quotation mark",
      level: "warning",
    },
    "202c": {
      zeroWidth: true,
      description: "pop directional formatting",
      level: "error",
    },
    "202d": {
      zeroWidth: true,
      description: "left-to-right override",
      level: "error",
    },
    "202e": {
      zeroWidth: true,
      description: "right-to-left override",
      level: "error",
    },
    fffc: {
      zeroWidth: true,
      description: "object replacement character",
      level: "error",
    },
  },
  // Color for **error** level
  "gremlins.color_error": "rgba(169, 68, 66, .75)",
  // Color for **info** level
  "gremlins.color_info": "rgba(60, 118, 61, .75)",
  // Color for **warning** level
  "gremlins.color_warning": "rgba(138, 109, 59, .75)",
  // gutter icon size
  "gremlins.gutterIconSize": "75%",
  // Show gremlins in the problem pane
  "gremlins.showInProblemPane": false,
  // Use customized Math expression block delimiters.
  "markdown-preview-enhanced.mathBlockDelimiters": [
    ["$$", "$$"],
    ["\\[", "\\]"],
  ],
  // Use customized Math expression inline delimiters.
  "markdown-preview-enhanced.mathInlineDelimiters": [
    ["$", "$"],
    ["\\(", "\\)"],
  ],
  // Choose the Math expression rendering method option for GFM markdown export (Save as Markdown).
  "markdown-preview-enhanced.mathRenderingOnlineService": "https://latex.codecogs.com/gif.latex",
  // Choose the Math expression rendering method here. You can also disable math rendering if you want by choosing 'None'.
  "markdown-preview-enhanced.mathRenderingOption": "KaTeX",
  // Mermaid theme, you can choose one from ["mermaid.css", "mermaid.dark.css", "mermaid.forest.css"]
  "markdown-preview-enhanced.mermaidTheme": "default",
  // Args passed to pandoc command e.g. ["--smart", "--filter=/bin/exe"] Please use long argument names.
  "markdown-preview-enhanced.pandocArguments": [],
  // The pandoc markdown flavor you want
  "markdown-preview-enhanced.pandocMarkdownFlavor": "markdown-raw_tex+tex_math_single_backslash",
  "vscode-json-editor.theme": "dark",
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features",
  },
  "generateJSONSchema.additionalProperties": true,
  "generateJSONSchema.jsDoc": "extended",
  "[css]": {
    "editor.defaultFormatter": "vscode.css-language-features",
  },
  "alignment.chars": {
    ":": {
      spaceBefore: 0,
      spaceAfter: 1,
    },
    "::": {
      spaceBefore: 0,
      spaceAfter: 0,
    },
    "=": {
      spaceBefore: 1,
      spaceAfter: 1,
    },
    "===": {
      spaceBefore: 1,
      spaceAfter: 1,
    },
    "==": {
      spaceBefore: 1,
      spaceAfter: 1,
    },
    "=>": {
      spaceBefore: 1,
      spaceAfter: 1,
    },
    "+=": {
      spaceBefore: 1,
      spaceAfter: 1,
    },
    "-=": {
      spaceBefore: 1,
      spaceAfter: 1,
    },
    "*=": {
      spaceBefore: 1,
      spaceAfter: 1,
    },
    "/=": {
      spaceBefore: 1,
      spaceAfter: 1,
    },
  },
  "alignment.surroundSpace": {
    colon: [0, 1],
    assignment: [1, 1],
    arrow: [1, 1],
    comment: 2,
  },
  "latex-workshop.latex.tools": [
    {
      name: "latexmk",
      command: "latexmk",
      args: [
        "--shell-escape",
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "-pdf",
        "-outdir=%OUTDIR%",
        "%DOC%",
      ],
    },
    {
      name: "pdflatex",
      command: "pdflatex",
      args: [
        "--shell-escape",
        "-synctex=1",
        "-interaction=nonstopmode",
        "-file-line-error",
        "%DOC%",
      ],
    },
    {
      name: "bibtex",
      command: "bibtex",
      args: ["%DOCFILE%"],
    },
  ],
  "docthis.includeDescriptionTag": true,
  "docthis.returnsTag": true,
  "docthis.inferTypesFromNames": true,
  "docthis.includeAuthorTag": true,
  "docthis.includeDateTag": true,
  "cSpell.userWords": [
    "aave",
    "ABDK",
    "acum",
    "addn",
    "adoc",
    "AGPL",
    "Allmonitors",
    "alpinejs",
    "Antlr",
    "antora",
    "apikey",
    "Arbitrum",
    "ARCHIVENODE",
    "ARGF",
    "arrayified",
    "arrayify",
    "Arrayish",
    "Assertable",
    "attnets",
    "autolabeler",
    "Automine",
    "Bacha",
    "Backoff",
    "Basefee",
    "batchcall",
    "bento",
    "bentobox",
    "Bentobox",
    "bignumber",
    "blockchains",
    "BLOCKHADH",
    "blockspace",
    "blockstream",
    "brotli",
    "browserslist",
    "browserslistrc",
    "build",
    "bytecode",
    "CALLCODE",
    "CALLDATACOPY",
    "CALLDATALOAD",
    "CALLDATASIZE",
    "CALLVALUE",
    "canonicalize",
    "clocksource",
    "cloudinary",
    "clsx",
    "cmds",
    "CODECOPY",
    "CODESIZE",
    "comovement",
    "contentlayer",
    "contractshark",
    "coredump",
    "covalenthq",
    "cprovider",
    "craco",
    "crossorigin",
    "cruip",
    "CRXSUSHI",
    "cryptoecononimc",
    "Ctoken",
    "cunieform",
    "datasources",
    "delegatecall",
    "denormalize",
    "Denylist",
    "devkit",
    "dimensionalize",
    "DOMODAO",
    "dpack",
    "dpacks",
    "ecsign",
    "editorjs",
    "eips",
    "Encodable",
    "enode",
    "Ethermine",
    "ethers",
    "ethersproject",
    "ethjs",
    "exponentiate",
    "EXTCODECOPY",
    "favicon",
    "FEIB",
    "firestore",
    "flashbots",
    "foldfinance",
    "FOLDUSDC",
    "FOLDUSDCLP",
    "FOLDWETH",
    "FOLDWETHLP",
    "Frontmatter",
    "getabi",
    "getsourcecode",
    "globby",
    "GSDZYRISER",
    "gvars",
    "hardfork",
    "hashicorp",
    "hashrate",
    "hdwallet",
    "headlessui",
    "Healthcheck",
    "HEVM",
    "hexlify",
    "hideable",
    "homescreen",
    "hoverable",
    "htmlescape",
    "hugepages",
    "IERC",
    "Impréssum",
    "inari",
    "Indentable",
    "injectedprovider",
    "interchain",
    "inversify",
    "ipaddress",
    "Ipfs",
    "Itopic",
    "JSBI",
    "JUMPDEST",
    "JUMPI",
    "Justfile",
    "Kademlia",
    "kashi",
    "katex",
    "kbar",
    "keccak",
    "keydata",
    "Knowledgebase",
    "KXVER",
    "libdisco",
    "libdsim",
    "libmev",
    "libwork",
    "lingui",
    "liveserver",
    "manifoldfinance",
    "mergeable",
    "merkle",
    "MERKLE",
    "metas",
    "MGTD",
    "microbundle",
    "Millis",
    "mkdocs",
    "MLOAD",
    "moesif",
    "monospace",
    "Moralis",
    "msapplication",
    "msgbus",
    "MSIZE",
    "MSTORE",
    "multicall",
    "Multicall",
    "multichain",
    "multiformats",
    "multimatch",
    "mushegia",
    "nanoeth",
    "NETHERMIND",
    "Networkish",
    "nextest",
    "Nextjs",
    "nodenext",
    "nomiclabs",
    "normies",
    "norpc",
    "Numberish",
    "objectname",
    "oclif",
    "OFAC",
    "OFAC's",
    "omap",
    "Omni",
    "ondown",
    "onreopen",
    "onsen",
    "openmev",
    "OPENMEV",
    "openvalidator",
    "orderbook",
    "overprovisioned",
    "pageview",
    "parserfile",
    "performant",
    "perma",
    "permissionless",
    "posttest",
    "precompiled",
    "predeploy",
    "prefetch",
    "prefetching",
    "prepatory",
    "prepopulated",
    "prettierrc",
    "rebalancing",
    "redpanda",
    "reduxjs",
    "reentrancy",
    "Reentrancy",
    "rehype",
    "retracement",
    "Retryable",
    "revm",
    "rmed",
    "roadmap",
    "routable",
    "rsplit",
    "Scancardium",
    "SDIV",
    "securerpc",
    "Selfdestruct",
    "sighash",
    "slithir",
    "SLOAD",
    "smtsolver",
    "sohint",
    "solhint",
    "soljson",
    "SPDX",
    "SSTORE",
    "stakers",
    "stdlib",
    "Subdenomination",
    "subn",
    "subprovider",
    "Subprovider",
    "subproviders",
    "superfences",
    "superjson",
    "sushicall",
    "SUSHIGUARD",
    "sushirelay",
    "sushiswap",
    "Sushiswap",
    "syntaxhighlight",
    "tailwindcss",
    "tokenlist",
    "topbar",
    "tsort",
    "tsserverlibrary",
    "tsukuru",
    "txns",
    "txprice",
    "typechain",
    "typecheck",
    "typeorm",
    "typesense",
    "unstake",
    "Untrusted",
    "unzap",
    "unzapping",
    "usex",
    "VDNNFPI",
    "Vercel",
    "Verdana",
    "Vertice",
    "vite",
    "vitest",
    "vsliveshare",
    "vyper",
    "walletconnect",
    "walletlink",
    "widont",
    "wireit",
    "WNATIVE",
    "XENF",
    "xffn",
    "xfold",
    "Xroute",
    "xstate",
    "XSUSHI",
    "zustand",
  ],
  "terminal.integrated.commandsToSkipShell": ["language-julia.interrupt"],
  "julia.symbolCacheDownload": true,
  "julia.enableTelemetry": false,
  // Enable/disable references CodeLens in JavaScript files.
  "javascript.referencesCodeLens.enabled": true,
  // Enable/disable references CodeLens on all functions in JavaScript files.
  "javascript.referencesCodeLens.showOnAllFunctions": true,
  // Enable/disable auto import suggestions.
  "javascript.suggest.autoImports": true,
  "javascript.validate.enable": false,
  "svelte.enable-ts-plugin": true,
  "terminal.integrated.env.osx": {
    FIG_NEW_SESSION: "1",
  },
  "editor.accessibilitySupport": "off",
  "workbench.colorTheme": "Syntax Material Dark Level 1 (beta)",
  "security.workspace.trust.untrustedFiles": "open",
  "editor.tokenColorCustomizations": {
    textMateRules: [
      {
        scope: "keyword.other.dotenv",
        settings: {
          foreground: "#FF000000",
        },
      },
    ],
  },
  "workbench.editorAssociations": {
    "*.pdf": "default",
  },
  "docify.expressiveComment": true,
  "docify.intelligentDetection": true,
  "docify.sidePanelReviewMode": true,
  "docify.style": "JsDoc",
  "window.zoomLevel": 1,
  "[shellscript]": {
    "breadcrumbs.showArrays": true,
  },

  "bashIde.explainshellEndpoint": "http://localhost:5000",
  "editor.semanticTokenColorCustomizations": {
    enabled: true, // enable for all themes
    "[Default Dark+]": {
      enabled: true, // enable for a particular theme
    },
    "syntax.highlightLanguages": [
      "bash",
      "c",
      "cpp",
      "python",
      "typescript",
      "typescriptreact",
      "javascript",
      "go",
      "rust",
      "php",
      "ruby",
      "shellscript",
      "ocaml",
      "lua",
    ],
  },
  "settingsSync.ignoredExtensions": ["juanblanco.solidity"],
  "blockman.n01LineHeight": 0,
  "editor.guides.indentation": false,
  "editor.guides.bracketPairs": false,
  "solidity-language-server.trace.server.verbosity": "message",
  "syntax.highlightTerms": [
    "type",
    "scope",
    "function",
    "variable",
    "number",
    "string",
    "comment",
    "constant",
    "directive",
    "control",
    "operator",
    "modifier",
    "punctuation",
  ],
  "coverage-gutters.coverageReportFileName": ".coverage/**/index.html",
  "bashIde.logLevel": "debug",
  "syntax.debugHover": true,
  "syntax.highlightLanguages": [
    "c",
    "cpp",
    "python",
    "typescript",
    "typescriptreact",
    "javascript",
    "go",
    "rust",
    "php",
    "ruby",
    "shellscript",
    "ocaml",
    "lua",
  ],
  // Controls whether an action button is shown in the Source Control view.
  "git.showActionButton": {
    commit: true,
    publish: true,
    sync: true,
  },
  "github.gitProtocol": "ssh",
  "github.copilot-labs.showTestGenerationLenses": true,
  "github.copilot-labs.showBrushesLenses": true,
  "github.copilot-labs.advanced": {
    // Controls which date to use for items in the Timeline view.
    //  - committed: Use the committed date
    //  - authored: Use the authored date
    "git.timeline.date": "committed",

    // Controls whether to show the commit author in the Timeline view.
    "git.timeline.showAuthor": true,
  },
  "githubNotificationsBell.refreshInterval": 300, // Amount of seconds to wait before each refresh
  // OAUTH TOKEN BELOW
  "githubNotificationsBell.oauthToken": "", // OAuth token used for requesting the notifications
  "githubNotificationsBell.alignment": "right", // Bell's position in the statusbar (left/right)
  "githubNotificationsBell.icon": "mark-github", // The icon to use in the statusbar
  "githubNotificationsBell.color": "", // Bell's color when there are some notifications
  "githubNotificationsBell.hideIfNone": true, // Hide the bell if there are no notifications
  "githubNotificationsBell.showNumberOfNotifications": true, // Show the number of notifications alongside the bell icon
  "githubNotificationsBell.domain": "github.com", // The Github domain to query against. Github Enterprise may use a different domain
}
